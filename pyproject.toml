[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.4",
  "hatchling>=1.25",
]

[project]
name = "tox-ini-fmt"
description = "tox is a generic virtualenv management and test command line tool"
readme.content-type = "text/markdown"
readme.file = "README.md"
keywords = [
  "environments",
  "isolated",
  "testing",
  "virtual",
]
license = "MIT"
maintainers = [
  { name = "Bernát Gábor", email = "gaborjbernat@gmail.com" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: tox",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "packaging>=24.1",
]
optional-dependencies.testing = [
  "covdefaults>=2.3",
  "pytest>=8.3.2",
  "pytest-cov>=5",
]
urls.Documentation = "https://tox.wiki"
urls.Homepage = "https://github.com/tox-dev/tox-ini-fmt/blob/main/README.md#tox-ini-fmt"
urls."Release Notes" = "https://github.com/tox-dev/tox-ini-fmt/blob/main/CHANGELOG.md"
urls.Source = "https://github.com/tox-dev/tox-ini-fmt"
urls.Tracker = "https://github.com/tox-dev/tox-ini-fmt/issues"
scripts.tox-ini-fmt = "tox_ini_fmt.__main__:run"

[tool.hatch]
build.dev-mode-dirs = [
  "src",
]
build.hooks.vcs.version-file = "src/tox_ini_fmt/version.py"
build.targets.sdist.include = [
  "/src",
  "/tests",
  "/tox.ini",
]
version.source = "vcs"

[tool.ruff]
target-version = "py38"
line-length = 120
format.preview = true
format.docstring-code-line-length = 100
format.docstring-code-format = true
lint.select = [
  "ALL",
]
lint.ignore = [
  "ANN101", # Missing type annotation for `self` in method
  "COM812", # Conflict with formatter
  "CPY",    # No copyright statements
  "D203",   # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",   # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "DOC",    # no support for sphinx
  "ISC001", # Conflict with formatter
]
lint.per-file-ignores."tests/**/*.py" = [
  "D",       # don't care about documentation in tests
  "FBT",     # don't care about booleans as positional arguments in tests
  "INP001",  # no implicit namespace
  "PLC2701", # private import is fine
  "PLR0917", # Too many positional argument
  "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
  "S",       # no safety concerns
  "S101",    # asserts allowed in tests
]
lint.isort = { known-first-party = [
  "tox_uv",
  "tests",
], required-imports = [
  "from __future__ import annotations",
] }
lint.preview = true

[tool.codespell]
builtin = "clear,usage,en-GB_to_en-US"
write-changes = true
count = true

[tool.pyproject-fmt]
max_supported_python = "3.13"

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".tox*/*/lib/python*/site-packages",
  ".tox*/pypy*/site-packages",
  ".tox*\\*\\Lib\\site-packages",
  "*/src",
  "*\\src",
]
report.fail_under = 100
run.parallel = true
run.plugins = [
  "covdefaults",
]

[tool.mypy]
python_version = "3.11"
show_error_codes = true
strict = true
