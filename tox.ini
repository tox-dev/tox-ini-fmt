[tox]
envlist =
    py310
    py39
    py38
    py37
    py36
    pypy3
    fix
    type
    pkg_check
isolated_build = true
skip_missing_interpreters = true
minversion = 3.14.0

[testenv]
description = run the unit tests with pytest under {basepython}
setenv =
    COVERAGE_FILE = {toxworkdir}{/}.coverage.{envname}
    COVERAGE_PROCESS_START = {toxinidir}{/}setup.cfg
    _COVERAGE_SRC = {envsitepackagesdir}{/}tox_ini_fmt
extras =
    test
commands =
    coverage erase
    coverage run -m pytest {tty:--color=yes} --junitxml {toxworkdir}{/}junit.{envname}.xml {posargs:tests}
    coverage combine
    coverage xml -o {toxworkdir}{/}coverage.{envname}.xml
    coverage html -d {envtmpdir}{/}htmlcov
    coverage report --skip-covered --show-missing --fail-under 100
isolated_build_env = .pkg
package = wheel

[testenv:fix]
description = run static analysis and style check using flake8
passenv =
    HOMEPATH
    PROGRAMDATA
basepython = python3.9
skip_install = true
deps =
    pre-commit>=2
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:type]
description = run type check on code base
deps =
    mypy==0.902
commands =
    mypy --strict --python-version 3.9 src{/}tox_ini_fmt

[testenv:pkg_check]
description = check that the long description is valid
passenv =
    *
basepython = python3.9
skip_install = true
deps =
    build>=0.2
    twine>=3.2
changedir = {toxinidir}
commands =
    pyproject-build -o {envtmpdir} .
    twine check {envtmpdir}{/}*

[testenv:dev]
description = generate a DEV environment
basepython = python3.9
usedevelop = true
extras =
    docs
    test
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'

[pytest]
junit_family = xunit2
