[tox]
skip_missing_interpreters = true
env_list =
    py311
    py310
    py39
    py38
    py37
    fix
    type
    readme
requires =
    tox>=4.2

[testenv]
description = run the unit tests with pytest under {base_python}
extras =
    test
commands =
    pytest {tty:--color=yes} {posargs: \
      --junitxml {work_dir}{/}junit.{env_name}.xml --cov {env_site_packages_dir}{/}tox_ini_fmt \
      --cov {tox_root}{/}tests --cov-fail-under=100 \
      --cov-config=setup.cfg --no-cov-on-fail --cov-report term-missing:skip-covered --cov-context=test \
      --cov-report html:{env_tmp_dir}{/}htmlcov --cov-report xml:{work_dir}{/}coverage.{env_name}.xml \
      tests}
package = wheel
set_env =
    COVERAGE_FILE = {work_dir}/.coverage.{env_name}
    COVERAGE_PROCESS_START = {tox_root}/setup.cfg
    _COVERAGE_SRC = {env_site_packages_dir}/sphinx_argparse_cli
wheel_build_env = .pkg

[testenv:fix]
description = run static analysis and style check using flake8
deps =
    pre-commit>=3.2.1
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'print("hint: run {envdir}/bin/pre-commit install to add checks as pre-commit hook")'
package = skip
pass_env =
    HOMEPATH
    PROGRAMDATA

[testenv:type]
description = run type check on code base
deps =
    mypy==1.1.1
commands =
    mypy src
    mypy tests
set_env =
    {tty:MYPY_FORCE_COLOR = 1}

[testenv:readme]
description = check that the long description is valid
deps =
    build[virtualenv]>=0.10
    twine>=4.0.2
commands =
    python -m build --sdist --wheel -o {env_tmp_dir} .
    twine check {env_tmp_dir}/*
package = skip

[testenv:dev]
description = generate a DEV environment
extras =
    test
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'
package = editable
